script.async.degree 5

git.flags.jobs -j5
git.repos[] moar
git.repos[] https://github.com/MoarVM/MoarVM.git
git.repos[] nqp
git.repos[] https://github.com/perl6/nqp.git
git.repos[] rakudo
git.repos[] https://github.com/rakudo/rakudo.git

arch.pointer.size 8
arch.endian.big 0

os.kernel windows_nt
os.distro mingw64
os.io.translate_newlines 1

lang.c.feature.cgoto 1
lang.c.feature.bool 1
lang.c.feature.unaligned.i32 1
lang.c.feature.unaligned.i64 1
lang.c.feature.unaligned.f32 1
lang.c.feature.unaligned.f64 1
lang.c.builtin.expect __builtin_expect((condition), (expection))
lang.c.builtin.expect.likely __builtin_expect(!!(condition), 1)
lang.c.builtin.expect.unlikely __builtin_expect(!!(condition), 0)
lang.c.pragma.vectorize_loop
lang.c.type.bool _Bool
lang.c.specifier.static_inline static inline
lang.c.specifier.dll.import __declspec(dllimport)
lang.c.specifier.dll.export __declspec(dllexport)
lang.c.specifier.noreturn _Noreturn
lang.c.attribute.noreturn
lang.c.attribute.format __attribute__((format(X, Y, Z)))

lib.c.pthread.yield 0
lib.c.std.malloc_trim 0

build.cc gcc
build.cc.flags.compile -c
build.cc.flags.out -o
build.cc.flags.include -I
build.ld gcc
build.ar ar
build.ar.flags.rcs rcs
build.as as
build.suffix.obj .o
build.suffix.asm .s
build.suffix.lib .a
build.warnings.ignore 0

moar.root moar
moar.jit.arch MVM_JIT_ARCH_X64
moar.jit.platform MVM_JIT_PLATFORM_WIN32
moar.install.prefix installed
moar.version 0.0.0
moar.version.major 0
moar.version.minor 0
moar.version.patch 0

moar.builds.default[] shared
moar.builds.default[] no-relocatable
moar.builds.default[] cgoto
moar.builds.default[] jit
moar.builds.default[] optimize
moar.builds.default[] no-debug
moar.builds[] shared
moar.builds[] cgoto
moar.builds[] debug
moar.builds[] optimize
moar.builds[] relocatable
moar.builds[] jit
moar.builds[] instrument
moar.builds[] asan
moar.builds[] ubsan
moar.builds[] valgrind
moar.builds[] telemeh

moar.src.base src
moar.src[] *.c
moar.src[] 6model/*.c
moar.src[] 6model/reprs/*.c
moar.src[] core/*.c
moar.src[] debug/*.c
moar.src[] gc/*.c
moar.src[] gen/*.c
moar.src[] instrument/*.c
moar.src[] io/*.c
moar.src[] jit/*.c
moar.src[] jit/x64/*.c
moar.src[] math/*.c
moar.src[] platform/*.c
moar.src[] platform/win32/*.c
moar.src[] profiler/*.c
moar.src[] spesh/*.c
moar.src[] strings/*.c
moar.src[] strings/siphash/*.c

moar.3rdparty.libatomicops.global 0
moar.3rdparty.libtommath.global 0
moar.3rdparty.libuv.global 0
moar.3rdparty.dyncall.global 0

moar.3rdparty.libuv.builds.default[] optimize
moar.3rdparty.libuv.builds.default[] no-debug
moar.3rdparty.libuv.builds[] optimize
moar.3rdparty.libuv.builds[] debug
moar.3rdparty.libuv.build.optimize.cc.flags -O3
moar.3rdparty.libuv.build.no-optimize.cc.flags -O0
moar.3rdparty.libuv.build.debug.cc.flags -g3
moar.3rdparty.libuv.build.no-debug.cc.flags -DNDEBUG

moar.3rdparty.libuv.root moar/3rdparty/libuv
moar.3rdparty.libuv.src.base src
moar.3rdparty.libuv.src[] *.c
moar.3rdparty.libuv.src[] win/*.c
moar.3rdparty.libuv.include[] include
moar.3rdparty.libuv.include[] src

moar.use.syslib[] shell32
moar.use.syslib[] ws2_32
moar.use.syslib[] mswsock
moar.use.syslib[] rpcrt4
moar.use.syslib[] advapi32
moar.use.syslib[] psapi
moar.use.syslib[] iphlpapi
moar.use.syslib[] userenv
moar.use.syslib[] user32
